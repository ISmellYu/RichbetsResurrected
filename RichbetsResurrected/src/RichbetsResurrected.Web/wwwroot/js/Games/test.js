let conn = new signalR.HubConnectionBuilder().withUrl("/crashHub").build();

// conn.start().then(function () {
//     console.log("connected crash");
//
//     conn.on("EndRoulette", function (history, current) {
//         console.log(history);
//         console.log(current);
//     });
//
//
//     conn.on("StartAnimation", function (data) {
//         console.log(data);
//     });
//
//     conn.stream("StreamCrashInfo").subscribe({
//         next: function (data) {
//             console.log(data);
//         }
//     });
//
//
// }).catch(function (err) {
//     return console.error(err.toString());
// });


// create svg element and insert it into the DOM
let svg = document.createElement("svg", {
    id: "crash",
    viewBox: "0 0 840 470",
}, document.createElement("div", {
    id: "crash_x"
}), document.createElement("div", {
    id: "crash_y"
}), document.createElement("path", {
    id: "crash_line",
    fill: "none",
    stroke: "#FFCF52",
    strokeWidth: "4",
    markerEnd: "url(#rocket)",
    strokeLinecap: "round"
}), document.createElement("defs", {
    xmlns: "http://www.w3.org/2000/svg"
}, document.createElement("div", {
    id: "rocket",
    orient: "auto",
    markerWidth: 72,
    markerHeight: 36,
    refX: 64.8,
    refY: 18,
    markerUnits: "strokeWidth",
    x: 0,
    y: 0,
    style: {
        overflow: "visible"
    }
}, "END" !== "1" ? document.createElement(document.Fragment, null, document.createElement("image", {
    width: 36,
    height: 36,
    x: 31.68
}), document.createElement("image", {
    width: 36,
    height: 36,
    x: 0
})) : document.createElement("div", {
    width: 36,
    height: 36,
    x: 36
}))))

// get div with class "test"
let div = document.getElementsByClassName("test")[0];
// append svg to div
div.appendChild(svg);
// M0,440.00000000864793L0.5554907564005366,440.00000000199697C1.1109815128010732,439.99999999534595,2.2219630256021463,439.9999999820439,3.3329445384032197,439.99999996811556C4.443926051204293,439.9999999541872,5.554907564005365,439.99999993963246,6.665889076806439,439.9999999243924C7.776870589607512,439.9999999091524,8.887852102408585,439.99999989322697,9.998833615209657,439.9999998765517C11.109815128010732,439.9999998598764,12.220796640811804,439.99999984245136,13.331778153612879,439.99999982420564C14.442759666413949,439.99999980596004,15.553741179215024,439.99999978689385,16.664722692016095,439.99999976693C17.77570420481717,439.999999746966,18.886685717618246,439.9999997261043,19.997667230419317,439.99999970426035C21.10864874322039,439.99999968241633,22.219630256021464,439.99999965959006,23.330611768822536,439.99999963568894C24.441593281623607,439.9999996117877,25.552574794424682,439.9999995868117,26.663556307225758,439.9999995606598C27.774537820026826,439.9999995345077,28.885519332827897,439.9999995071796,29.996500845628972,439.9999994785648C31.107482358430047,439.9999994499499,32.218463871231116,439.9999994200482,33.32944538403219,439.9999993887386C34.440426896833266,439.99999935742886,35.55140840963434,439.99999932471127,36.66238992243541,439.999999290453C37.773371435236484,439.9999992561948,38.88435294803756,439.9999992203961,39.995334460838635,439.99999918291155C41.10631597363971,439.9999991454271,42.21729748644078,439.999999106257,43.32827899924185,439.99999906524243C44.43926051204293,439.99999902422786,45.550242024844,439.99999898136895,46.66122353764507,439.99999893649186C47.77220505044614,439.9999988916149,48.883186563247214,439.99999884471964,49.99416807604828,439.9999987956164C51.10514958884935,439.9999987465131,52.21613110165043,439.9999986952016,53.327112614451515,439.99999864147406C54.43809412725258,439.99999858774646,55.54907564005365,439.9999985316028,56.66005715285473,439.9999984728154C57.771038665655794,439.9999984140281,58.88202017845688,439.99999835259706,59.993001691257945,439.9999982882734C61.10398320405901,439.99999822394983,62.214964716860095,439.9999981567336,63.32594622966116,439.99999808635243C64.43692774246223,439.9999980159712,65.5479092552633,439.99999794242495,66.65889076806438,439.99999786541565C67.76987228086546,439.9999977884063,68.88085379366653,439.9999977079339,69.9918353064676,439.9999976236723C71.10281681926868,439.9999975394107,72.21379833206974,439.99999745135983,73.32477984487082,439.99999735916293C74.4357613576719,439.999997266966,75.54674287047297,439.9999971706231,76.65772438327404,439.99999706974353C77.76870589607512,439.9999969688641,78.8796874088762,439.99999686344813,79.99066892167727,439.9999967530684C81.10165043447834,439.9999966426887,82.2126319472794,439.9999965273452,83.3236134600805,439.99999640657046C84.43459497288156,439.9999962857958,85.54557648568262,439.99999615958995,86.6565579984837,439.99999602744145C87.76753951128478,439.9999958952929,88.87852102408584,439.9999957572017,89.98950253688692,439.9999956126081C91.10048404968798,439.99999546801456,92.21146556248907,439.9999953169188,93.32244707529014,439.99999515870826C94.43342858809122,439.9999950004978,95.5444101008923,439.9999948351726,96.65539161369337,439.99999466206265C97.76637312649443,439.9999944889528,98.8773546392955,439.9999943080582,99.98833615209658,439.9999941186458C101.09931766489764,439.9999939292334,102.21029917769873,439.9999937313032,103.32128069049979,439.9999935240531C104.43226220330087,439.999993316803,105.54324371610194,439.9999931002328,106.654225228903,439.99999287346503C107.76520674170409,439.9999926466972,108.87618825450517,439.99999240973176,109.98716976730624,439.9999921616083C111.0981512801073,439.9999919134848,112.20913279290839,439.9999916542033,113.32011430570947,439.999991382713C114.43109581851053,439.99999111122264,115.5420773313116,439.9999908275235,116.65305884411266,439.99999053046577